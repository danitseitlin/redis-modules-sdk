name: CI
on:
  workflow_dispatch:
    inputs:
      tests:
        description: "What tests to run. Available options: rejson, rts, redisearch, redisgraph, redisgears, redisbloom, rebloomTopK, rebloomCMK, rebloomCuckoo. Use 'All' to run all tests."
        required: true
        default: 'All'
      #rejson:
      #  description: 'Run ReJSON tests'
      #  required: true
      #  default: 'Yes'
      #rts:
      #  description: 'Run RTS tests'
      #  required: true
      #  default: 'Yes'
      #redisearch:
      #  description: 'Run RediSearch tests'
      #  required: true
      #  default: 'Yes'
      #redisgraph:
      #  description: 'Run RedisGraph tests'
      #  required: true
      #  default: 'Yes'
      #redisgears:
      #  description: 'Run RedisGears tests'
      #  required: true
      #  default: 'Yes'
      #redisbloom:
      #  description: 'Run RedisBloom tests'
      #  required: true
      #  default: 'Yes'
      #redisbloomtopk:
      #  description: 'Run RedisBloom TopK tests'
      #  required: true
      #  default: 'Yes'
      #redisbloomcmk:
      #  description: 'Run RedisBloom CMK tests'
      #  required: true
      #  default: 'Yes'
      #redisbloomcuckoo:
      #  description: 'Run RedisBloom Cuckoo tests'
      #  required: true
      #  default: 'Yes'
  pull_request: 
    branches: [master]
jobs:
  #Verifying build and compilation
  fetch-changes:
    runs-on: ubuntu-latest
    steps:
    - name: Fetching files changed
      id: files
      run: echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }}| xargs)"
    - name: echo the changed files
      run: echo "${{ steps.files.outputs.files }}"
  Compilation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup & build
      run: npm i && npm run build
  #Build for 'ReJSON' module
  ReJSON:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rejson') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/rejson:latest && docker ps -a
    - name: Running tests
      run: npm i && npm run rejson-module-tests
  #Build for 'Redis Times Series' module
  RTS:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rts') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/redistimeseries && docker ps -a
    - name: Running tests
      run: npm i && npm run rts-module-tests
  #Build for 'Redis Search' module
  Redisearch:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redisearch') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/redisearch:latest && docker ps -a
    - name: Running tests
      run: npm i && npm run redisearch-module-tests
  #Build for 'Redis Graph module
  RedisGraph:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redisgraph') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/redisgraph:latest && docker ps -a
    - name: Running tests
      run: npm i && npm run redisgraph-module-tests
  #Build for 'RedisGears' module
  RedisGears:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redisgears') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/redisgears:latest && docker ps -a
    - name: Running tests
      run: npm i && npm run redisgears-module-tests
  #Build for 'Redis Bloom' module
  ReBloom:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'redisbloom') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/rebloom:latest && docker ps -a
    - name: Running tests
      run: npm i && npm run redisbloom-filter-tests
  #Build for 'Redis Bloom TopK' filter
  ReBloomTopK:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rebloomTopK') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/rebloom:latest && docker ps -a
    - name: Running tests
      run: npm i && npm run redisbloom-topk-filter-tests
  #Build for 'Redis Bloom CMK' filter
  ReBloomCMK:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rebloomCMK') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/rebloom:latest && docker ps -a
    - name: Running tests
      run: npm i && npm run redisbloom-cmk-filter-tests
  #Build for 'Redis Bloom Cuckoo' filter
  ReBloomCuckoo:
    if: (github.event_name == 'workflow_dispatch' && (contains(github.event.inputs.tests, 'rebloomCuckoo') || github.event.inputs.tests == 'All')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: nightly
        docker_nightly_version: snapshot-20200915
    - uses: actions/checkout@v2
    - name: Setting up Redis
      run: docker run -p 6379:6379 -d --rm redislabs/rebloom:latest && docker ps -a
    - name: Running tests
      run: npm i && npm run redisbloom-cuckoo-filter-tests